import { NextRequest, NextResponse } from 'next/server'

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ filename: string }> }
) {
  try {
    const { filename } = await params

    // For demo purposes, we'll create a simple text response that simulates a PDF download
    // In a real implementation, this would fetch the generated PDF from storage

    if (!filename.endsWith('.pdf')) {
      return NextResponse.json({ error: 'Invalid file type' }, { status: 400 })
    }

    // Create a simple text content that simulates a PDF
    const mockBookContent = `
# Generated Book - Demo

This is a demo PDF download for the Book Agent application.

## Table of Contents
1. Introduction
2. Chapter 1: Getting Started
3. Chapter 2: Advanced Topics
4. Conclusion

## Introduction
This book was generated using the Book Agent AI system.

## Chapter 1: Getting Started
Welcome to your generated book! This demonstrates the PDF download functionality.

## Chapter 2: Advanced Topics
Here we would cover more advanced topics in your book.

## Conclusion
Thank you for using the Book Agent system!

---
Generated by Book Agent AI
Date: ${new Date().toLocaleDateString()}
`

    // Create response with proper PDF headers
    const response = new NextResponse(mockBookContent)

    // Set headers to trigger download
    response.headers.set('Content-Type', 'application/pdf')
    response.headers.set('Content-Disposition', `attachment; filename="${filename}"`)
    response.headers.set('Cache-Control', 'no-cache')

    return response

  } catch (error) {
    console.error('Download error:', error)
    return NextResponse.json(
      { error: 'Failed to download file' },
      { status: 500 }
    )
  }
}